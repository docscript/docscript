{
    "compilerOptions": {
        "target": "es6",
        "moduleResolution": "node",
        "isolatedModules": false,
        "jsx": "preserve",
        "experimentalDecorators": true,
        "emitDecoratorMetadata": true,
        "declaration": false,
        "noImplicitAny": false,
        "removeComments": true,
        "noLib": false,
        "preserveConstEnums": true,
        "suppressImplicitAnyIndexErrors": true
    },
    "compileOnSave": false,
    "filesGlob": [
        "./**/*.ts",
        "./**/*.tsx"
    ],
    "files": [
        "./doc/ast/class.ts",
        "./doc/ast/interface.ts",
        "./doc/ast/type.ts",
        "./doc/defines.d.ts",
        "./doc/gen.ts",
        "./doc/index.ts",
        "./doc/items.ts",
        "./doc/test.ts",
        "./doc/tests/class-accessors.ts",
        "./doc/tests/class-constructor.ts",
        "./doc/tests/class-heritage.ts",
        "./doc/tests/class-simple.ts",
        "./doc/tests/index.ts",
        "./doc/tests/interface-call.ts",
        "./doc/tests/interface-doc.ts",
        "./doc/tests/interface-generic.ts",
        "./doc/tests/interface-heritage.ts",
        "./doc/tests/interface-index.ts",
        "./doc/tests/interface-intersection.ts",
        "./doc/tests/interface-literal.ts",
        "./doc/tests/interface-simple.ts",
        "./doc/tests/utils.ts",
        "./doc/tools.ts",
        "./doc/utils.ts",
        "./doc/writer.ts",
        "./explorer-ts/index.ts",
        "./explorer/actions.ts",
        "./explorer/components/theme.ts",
        "./explorer/defines.d.ts",
        "./explorer/plugins.ts",
        "./explorer/reducers/index.ts",
        "./explorer/redux.ts",
        "./explorer/service.ts",
        "./explorer/state.ts",
        "./explorer/typings/bem-cn.d.ts",
        "./explorer/typings/history.d.ts",
        "./explorer/typings/react-common.d.ts",
        "./explorer/typings/react-custom-scrollbars.d.ts",
        "./explorer/typings/react-redux.d.ts",
        "./explorer/typings/react/react-dom.d.ts",
        "./explorer/typings/react/react.d.ts",
        "./explorer/typings/redux-thunk.d.ts",
        "./explorer/typings/redux.d.ts",
        "./lib/autobind.ts",
        "./lib/equal.ts",
        "./loader-plugin/index.ts",
        "./explorer-ts/brackets/index.tsx",
        "./explorer-ts/interface/index.tsx",
        "./explorer-ts/list/index.tsx",
        "./explorer-ts/module/index.tsx",
        "./explorer-ts/property/index.tsx",
        "./explorer-ts/type-arguments/index.tsx",
        "./explorer-ts/type-core/index.tsx",
        "./explorer-ts/type-expression/index.tsx",
        "./explorer-ts/type-parameter/index.tsx",
        "./explorer-ts/type-ref/index.tsx",
        "./explorer-ts/type.tsx",
        "./explorer/components/app/index.tsx",
        "./explorer/components/breadcrumbs/index.tsx",
        "./explorer/components/file/index.tsx",
        "./explorer/components/heading/index.tsx",
        "./explorer/components/layout/index.tsx",
        "./explorer/components/link/index.tsx",
        "./explorer/components/module/index.tsx",
        "./explorer/components/nav/index.tsx",
        "./explorer/components/paper/index.tsx",
        "./explorer/components/path/index.tsx",
        "./explorer/components/smart-link/index.tsx",
        "./explorer/index.tsx"
    ],
    "exclude": [
        "node_modules",
        "bower_components",
        "example"
    ],
    "atom": {
        "rewriteTsconfig": true
    }
}
